{"searchDocs":[{"title":"PlayerAPI","type":0,"sectionRef":"#","url":"/GAdminV2/api/PlayerAPI","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#types","content":" ","version":null,"tagName":"h2"},{"title":"PlayerAPI​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#PlayerAPI","content":"&lt;/&gt; interface PlayerAPI { __type: string Players: {[number]: PlayerData} API: ServerAPI __RankPrompt: ( Player: Player , Rank: RankLike ) → nil __BanPrompt: ( Player: Player , BanData: BanOptions ) → nil Load: (API: ServerAPI) → nil GetUserId: (PlayerLike: UserLike) → number GetData: (PlayerLike: UserLike) → PlayerData SetData: ( PlayerLike: UserLike, Key: string, Value: any ) → boolean | nil OnMessage: ( player: Player , Message: string, Options: OnMessageOptions ) → PlayerData Bind: (player: Player ) → nil UnBind: (player: Player ) → nil }   ","version":null,"tagName":"h3"},{"title":"PlayerData​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#PlayerData","content":"&lt;/&gt; interface PlayerData { Data: {[string]: any} Session: {[string]: any} }   ","version":null,"tagName":"h3"},{"title":"UserLike​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#UserLike","content":"&lt;/&gt; type UserLike = number | string | Player   ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#properties","content":" ","version":null,"tagName":"h2"},{"title":"Players​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#Players","content":"&lt;/&gt; PlayerAPI.Players: {[number]: PlayerData} Player datas. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetUserId​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#GetUserId","content":"&lt;/&gt; PlayerAPI:GetUserId(PlayerLike: UserLike) → number Gets player with given UserId.  ","version":null,"tagName":"h3"},{"title":"GetData​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#GetData","content":"&lt;/&gt; PlayerAPI:GetData(PlayerLike: UserLike) → PlayerData Gets player data.  ","version":null,"tagName":"h3"},{"title":"SetData​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#SetData","content":"&lt;/&gt; PlayerAPI:SetData( PlayerLike: UserLike, Key: string, Value: any ) → boolean | nil Sets player data.  ","version":null,"tagName":"h3"},{"title":"OnMessage​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#OnMessage","content":"&lt;/&gt; PlayerAPI:OnMessage( player: Player , Message: string, Options: OnMessageOptions ) → PlayerData ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"PlayerAPI","url":"/GAdminV2/api/PlayerAPI#OnMessageOptions","content":"interface OnMessageOptions { NoLimit: boolean }  Log and call commands from specified message. ","version":null,"tagName":"h3"},{"title":"Start to use GAdmin in your game","type":0,"sectionRef":"#","url":"/GAdminV2/docs/intro","content":"Start to use GAdmin in your game You may find links below useful: Install GAdminV2: How to installMigrate to GAdminV2: Migrate from other admin panelsGAdmin API: APIHow to set up your own addon: Addons GuideCustom addon examples: Addon Examples","keywords":"","version":"Next"},{"title":"Addon Examples","type":0,"sectionRef":"#","url":"/GAdminV2/docs/AddonExamples","content":"Addon Examples warning This page is under construction. tip See Addons first. Download addon example here","keywords":"","version":"Next"},{"title":"Installation","type":0,"sectionRef":"#","url":"/GAdminV2/docs/Installation","content":"Installation GAdminV2 doesn't require unpacking anything. Just insert GAdminV2.rbxm into ServerScriptService, and you're ready to go! Guide Download the latest version of GAdminV2 from GitHub. warning It is recommended to download a release that doesn't have the pre-release tag. Place GAdminV2 inside ServerScriptService. Now, go to Game Settings located in the top bar, navigate to the Security category, and enable the following parameters: Enable Studio Access to API Services This is essential for GAdminV2's workflow. Without it, half of GAdmin's features will stop working. Allow Third-Party Sales This is required for the correct functionality of the About page in the admin panel. If you want to use the in-game server-side executor, follow the steps below: Select ServerScriptService inside the Explorer.Enable the LoadStringEnabled property inside it. info LoadStringEnabled is essential for the executor to work because it relies on that Roblox feature. warning Enabling the LoadStringEnabled property comes with potential downsides. Malicious code can now execute strings as code directly into your game using loadstring(). Be cautious with this setting.","keywords":"","version":"Next"},{"title":"Popup","type":0,"sectionRef":"#","url":"/GAdminV2/api/Popup","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#types","content":" ","version":null,"tagName":"h2"},{"title":"CutPopupData​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#CutPopupData","content":"&lt;/&gt; interface CutPopupData { Type: &quot;Notice&quot; | &quot;Warning&quot; | &quot;Error&quot;-- The type of popup to create. Title: string-- The title of the popup. Text: string-- The text of the popup. Time: number-- The time the popup will be displayed for. Interaction: boolean-- If the popup is interactable. }  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#properties","content":" ","version":null,"tagName":"h2"},{"title":"History​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#History","content":"&lt;/&gt; Popup.History: {CutPopupData} A table containing the history of last 100 popups. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#functions","content":" ","version":null,"tagName":"h2"},{"title":"New​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#New","content":"&lt;/&gt; Popup:New( Data: PopupData-- The data to create the popup with. ) → nil ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#Popup","content":"interface Popup { __type: string History: {CutPopupData} New: (Data: PopupData) → nil }  ","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Popup","url":"/GAdminV2/api/Popup#PopupData","content":"interface PopupData { Player: Player | nil-- The player to send the popup to. (If on server) Type: &quot;Notice&quot; | &quot;Warning&quot; | &quot;Error&quot;-- The type of popup to create. Title: string | nil-- The title of the popup. Text: string-- The text of the popup. Time: number | nil-- The time the popup will be displayed for. Interact: () → nil-- On interaction function. OnEnd: () → nil-- The function to run when the popup ends. }  Creates a new popup. ","version":null,"tagName":"h3"},{"title":"ServerAPI","type":0,"sectionRef":"#","url":"/GAdminV2/api/ServerAPI","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#types","content":" ","version":null,"tagName":"h2"},{"title":"ServerAPI​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#ServerAPI","content":"&lt;/&gt; interface ServerAPI { __type: string __Messages: table PlayerAPI: PlayerAPI RankService: RankService __EncryptMessageEnum: ( Topic: string, Item: unknown ) → unknown, __DecryptMessageEnum: ( Topic: string, Id: unknown ) → unknown, SetMessage: ( Topic: string, Enums: table ) → nil, ReceiveMessage: ( Topic: string, Function: (Data: MessageData) → () ) → nil, SendMessage: ( Topic: string, Data: table ) → boolean, GetOwnerId: () → number, Shutdown: (Reason: string) → nil, Ban: ( UserLike: UserLike, Options: BanOptions ) → boolean, UnBan: ( UserLike: UserLike, Type: string ) → boolean, GetBanData: ( UserLike: UserLike, Type: string ) → BanData, IsBanned: ( UserLike: UserLike, Type: string ) → boolean, GetBanlist: (Type: string) → table, GetPrefix: (player: UserLike) → string, SetPrefix: ( player: UserLike, Prefix: string ) → nil, GetRank: (player: UserLike) → RankData, SetRank: ( player: UserLike, Rank: RankLike, Server: boolean ) → nil }  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#properties","content":" ","version":null,"tagName":"h2"},{"title":"PlayerAPI​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#PlayerAPI","content":"&lt;/&gt; ServerAPI.PlayerAPI: PlayerAPI   ","version":null,"tagName":"h3"},{"title":"RankService​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#RankService","content":"&lt;/&gt; ServerAPI.RankService: RankService  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#functions","content":" ","version":null,"tagName":"h2"},{"title":"SetMessage​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#SetMessage","content":"&lt;/&gt; ServerAPI:SetMessage( Topic: string,-- Topic to send thru MessagingService Enums: table-- Compress strings mentioned in Enums to numbers for memory saving. ) → nil Set enums for specific topic of MessaginService.  ","version":null,"tagName":"h3"},{"title":"ReceiveMessage​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#ReceiveMessage","content":"&lt;/&gt; ServerAPI:ReceiveMessage( Topic: string,-- Topic to send thru MessagingService Function: (Data: MessageData) → ()-- Function to execute when message is received. ) → nil ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#MessageData","content":"type MessageData = table  Listens for messages sent thru MessagingService.  ","version":null,"tagName":"h3"},{"title":"SendMessage​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#SendMessage","content":"&lt;/&gt; ServerAPI:SendMessage( Topic: string,-- Topic to send thru MessagingService Data: table-- Data to send thru MessagingService ) → boolean Send message using MessagingService.  ","version":null,"tagName":"h3"},{"title":"GetOwnerId​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#GetOwnerId","content":"&lt;/&gt; ServerAPI:GetOwnerId() → number Returns owner id of the game.  ","version":null,"tagName":"h3"},{"title":"Shutdown​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#Shutdown","content":"&lt;/&gt; ServerAPI:Shutdown( Reason: string-- Reason for shutdown. ) → nil Shutdown current server.  ","version":null,"tagName":"h3"},{"title":"Ban​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#Ban","content":"&lt;/&gt; ServerAPI:Ban( UserLike: UserLike,-- Topic to send thru MessagingService Options: BanOptions-- Ban options. ) → boolean ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#BanOptions","content":"interface BanOptions { Reason: string-- Ban reason. PrivateReason: string-- Private ban reason. Time: number-- Ban time. Moderator: number-- Moderator id. API: boolean-- Use Roblox ban API. Locally: boolean-- Ban locally. ApplyToUniverse: boolean-- Apply to universe. ExcludeAltAccount: boolean-- Exclude alt account. }  Bans specified player.  ","version":null,"tagName":"h3"},{"title":"UnBan​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#UnBan","content":"&lt;/&gt; ServerAPI:UnBan( UserLike: UserLike,-- Topic to send thru MessagingService Type: &quot;Global&quot; | &quot;Server&quot;-- Type of unban. ) → boolean Unbans specified player.  ","version":null,"tagName":"h3"},{"title":"GetBanData​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#GetBanData","content":"&lt;/&gt; ServerAPI:GetBanData( UserLike: UserLike,-- Topic to send thru MessagingService Type: &quot;Global&quot; | &quot;Server&quot;-- Type of unban. ) → BanData Returns ban data of specified player.  ","version":null,"tagName":"h3"},{"title":"IsBanned​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#IsBanned","content":"&lt;/&gt; ServerAPI:IsBanned( UserLike: UserLike,-- Topic to send thru MessagingService Type: &quot;Global&quot; | &quot;Server&quot;-- Type of unban. ) → boolean Returns if specified player is banned.  ","version":null,"tagName":"h3"},{"title":"GetBanlist​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#GetBanlist","content":"&lt;/&gt; ServerAPI:GetBanlist( Type: &quot;Global&quot; | &quot;Server&quot; | &quot;Both&quot; | &quot;Formatted&quot;-- Type of banlist. ) → table Returns banlist.  ","version":null,"tagName":"h3"},{"title":"GetPrefix​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#GetPrefix","content":"&lt;/&gt; ServerAPI:GetPrefix( player: UserLike-- Player to get prefix from. ) → string Returns player's prefix.  ","version":null,"tagName":"h3"},{"title":"SetPrefix​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#SetPrefix","content":"&lt;/&gt; ServerAPI:SetPrefix( player: UserLike,-- Player to set prefix for. Prefix: string-- New prefix. ) → nil Sets new prefix for given player.  ","version":null,"tagName":"h3"},{"title":"GetRank​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#GetRank","content":"&lt;/&gt; ServerAPI:GetRank( player: UserLike-- Player to get rank from. ) → RankData Returns player's rank.  ","version":null,"tagName":"h3"},{"title":"SetRank​","type":1,"pageTitle":"ServerAPI","url":"/GAdminV2/api/ServerAPI#SetRank","content":"&lt;/&gt; ServerAPI:SetRank( player: UserLike,-- Player to set rank for. Rank: RankLike,-- New rank. Server: boolean-- Set rank for current server only. ) → nil Sets new rank for given player. ","version":null,"tagName":"h3"},{"title":"Framework","type":0,"sectionRef":"#","url":"/GAdminV2/api/Framework","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#types","content":" ","version":null,"tagName":"h2"},{"title":"Framework​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Framework","content":"&lt;/&gt; interface Framework { __type: string Interface: Interface Cache: table UI: UI Display: table Draggable: table Chat: table Load: () → nil Trigger: (Data: PlaceTriggerData) → unknown Display: ( Name: string, ... ) → unknown }  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#properties","content":" ","version":null,"tagName":"h2"},{"title":"Interface​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Interface","content":"&lt;/&gt; Framework.Interface: Interface   ","version":null,"tagName":"h3"},{"title":"Cache​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Cache","content":"&lt;/&gt; Framework.Cache: table Client cache.  ","version":null,"tagName":"h3"},{"title":"UI​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#UI","content":"&lt;/&gt; Framework.UI: UI   ","version":null,"tagName":"h3"},{"title":"Display​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Display","content":"&lt;/&gt; Framework.Display: table  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#functions","content":" ","version":null,"tagName":"h2"},{"title":"Trigger​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Trigger","content":"&lt;/&gt; Framework:Trigger(Data: PlaceTriggerData) → unknown ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#PlaceTriggerData","content":"interface PlaceTriggerData { Place: string-- Name of the UI Place Method: string-- Name of the method to trigger Arguments: table-- Arguments to pass to the method }  Triggers a method of a UI Place.  ","version":null,"tagName":"h3"},{"title":"Display​","type":1,"pageTitle":"Framework","url":"/GAdminV2/api/Framework#Display","content":"&lt;/&gt; Framework:Display( Name: string,,-- Name of the UI Object ...: any,-- Arguments ) → unknown Displays a UI Object. ","version":null,"tagName":"h3"},{"title":"RankService","type":0,"sectionRef":"#","url":"/GAdminV2/api/RankService","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#types","content":" ","version":null,"tagName":"h2"},{"title":"RankService​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RankService","content":"&lt;/&gt; interface RankService { __type: string RecentPlayers: {[number]: PlayerData} Temporary: {RankData} Save: () → boolean Reload: () → {RankData} BatchAdd: ( Data: {RankData}, Locally: boolean ) → nil Add: ( Data: RankData, Locally: boolean ) → nil Change: ( RankLike: RankLike, Data: RankData, Locally: boolean ) → nil Remove: ( RankLike: RankLike, Locally: boolean ) → nil AddUsers: ( Rank: RankLike, UserIds: {number}, Locally: boolean ) → nil RemoveUsers: ( Rank: RankLike, UserIds: {number}, Locally: boolean ) → nil SetUser: ( Rank: RankLike, UserId: number, Locally: boolean ) → nil AddUser: ( Rank: RankLike, UserId: number, Locally: boolean ) → nil RemoveUser: ( UserId: number, Locally: boolean ) → nil FindUser: (UserId: number) → RankData HasRank: ( Rank: RankLike, UserId: number ) → boolean GetUsers: ( Rank: RankLike, Type: &quot;All&quot; | &quot;Server&quot; | &quot;Global&quot; ) → {number} GetArray: ( Rank: RankLike, UserId: number ) → {string} IsInternal: (UserId: number) → boolean IsEquals: ( RankData: RankData, SourceData: RankData ) → boolean Find: ( RankLike: RankLike, FromCloned: boolean, NoCopy: boolean, FromTemporary: boolean ) → RankData,number }   ","version":null,"tagName":"h3"},{"title":"RankData​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RankData","content":"&lt;/&gt; interface RankData { Name: string Rank: number Players: {number | string} MadeBy: string | nil Temporary: boolean | nil }   ","version":null,"tagName":"h3"},{"title":"RankLike​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RankLike","content":"&lt;/&gt; type RankLike = number | string  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#properties","content":" ","version":null,"tagName":"h2"},{"title":"RecentPlayers​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RecentPlayers","content":"&lt;/&gt; RankService.RecentPlayers: {[number]: PlayerData} Recented cached player datas.  ","version":null,"tagName":"h3"},{"title":"Temporary​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#Temporary","content":"&lt;/&gt; RankService.Temporary: {RankData} Temporary rank data. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#functions","content":" ","version":null,"tagName":"h2"},{"title":"BatchAdd​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#BatchAdd","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:BatchAdd( Data: {RankData},-- Ranks to add. Locally: boolean-- If the ranks should be added locally. ) → nil Adds new ranks at once to the rank data.  ","version":null,"tagName":"h3"},{"title":"Add​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#Add","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:Add( Data: RankData,-- Rank to add. Locally: boolean-- If the rank should be added locally. ) → nil Adds new rank to the rank data.  ","version":null,"tagName":"h3"},{"title":"Change​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#Change","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:Change( RankLike: RankLike,-- Rank to change. Data: RankData,-- New rank data. Locally: boolean-- If the rank should be changed locally. ) → nil Changes rank data.  ","version":null,"tagName":"h3"},{"title":"Remove​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#Remove","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:Remove( RankLike: RankLike,-- Rank to remove. Locally: boolean-- If the rank should be removed locally. ) → nil Removes rank from the rank data.  ","version":null,"tagName":"h3"},{"title":"AddUsers​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#AddUsers","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:AddUsers( Rank: RankLike,-- Rank to add users to. UserIds: {number},-- Users to add. Locally: boolean-- If the users should be added locally. ) → nil Adds users to the rank.  ","version":null,"tagName":"h3"},{"title":"RemoveUsers​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RemoveUsers","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:RemoveUsers( Rank: RankLike,-- Rank to remove users from. UserIds: {number},-- Users to remove. Locally: boolean-- If the users should be removed locally. ) → nil Removes users from the rank.  ","version":null,"tagName":"h3"},{"title":"SetUser​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#SetUser","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:SetUser( Rank: RankLike,-- Rank to set user to. UserId: number,-- User to set. Locally: boolean-- If the user should be set locally. ) → nil Sets user to the rank.  ","version":null,"tagName":"h3"},{"title":"AddUser​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#AddUser","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:AddUser( Rank: RankLike,-- Rank to add user to. UserId: number,-- User to add. Locally: boolean-- If the user should be added locally. ) → nil Adds user to the rank.  ","version":null,"tagName":"h3"},{"title":"RemoveUser​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#RemoveUser","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:RemoveUser( UserId: number,-- User to remove. Locally: boolean-- If the user should be removed locally. ) → nil Removes user from the rank.  ","version":null,"tagName":"h3"},{"title":"FindUser​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#FindUser","content":"&lt;/&gt; RankService:FindUser( UserId: number-- User to find. ) → RankData Finds user rank.  ","version":null,"tagName":"h3"},{"title":"HasRank​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#HasRank","content":"&lt;/&gt; RankService:HasRank( Rank: RankLike,-- Rank to check for. UserId: number-- User to check. ) → boolean Checks if user has rank.  ","version":null,"tagName":"h3"},{"title":"GetUsers​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#GetUsers","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RankService:GetUsers( Rank: RankLike,-- Rank to get users from. Type: &quot;All&quot; | &quot;Server&quot; | &quot;Global&quot;-- Type of users to get. ) → {number} Returns array table of users in the rank.  ","version":null,"tagName":"h3"},{"title":"GetArray​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#GetArray","content":"&lt;/&gt; RankService:GetArray( Rank: RankLike,-- Rank to get array from. UserId: number-- Unused argument. Can be skipped. ) → {string} Returns array table of ranks.  ","version":null,"tagName":"h3"},{"title":"IsEquals​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#IsEquals","content":"&lt;/&gt; RankService:IsEquals( RankData: RankData,-- Rank data to check. SourceData: RankData-- Source data to check. ) → boolean Checks if rank data is equals to source data.  ","version":null,"tagName":"h3"},{"title":"Find​","type":1,"pageTitle":"RankService","url":"/GAdminV2/api/RankService#Find","content":"&lt;/&gt; RankService:Find( RankLike: RankLike,-- Rank to find. FromCloned: boolean,-- If the rannk data should be returned from constant rank table. NoCopy: boolean,-- If the rank data should be returned as a reference and not a copy. FromTemporary: boolean-- If the rank data should be returned from temporary rank table. ) → RankData,number Finds rank data. ","version":null,"tagName":"h3"},{"title":"Migration","type":0,"sectionRef":"#","url":"/GAdminV2/docs/Migrate","content":"warning This page is under construction. Migration Have you previously used HDAdmin, Commander, Exe, or Adonis admin systems and now want to switch to GAdminV2 without modifying any of your previous settings for these systems? Fear not, ...","keywords":"","version":"Next"},{"title":"Interface","type":0,"sectionRef":"#","url":"/GAdminV2/api/Interface","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#types","content":" ","version":null,"tagName":"h2"},{"title":"Interface​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Interface","content":"&lt;/&gt; interface Interface { __type: string }   ","version":null,"tagName":"h3"},{"title":"CurrentlyHovered​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#CurrentlyHovered","content":"&lt;/&gt; interface CurrentlyHovered { Object: GuiObject -- The object that is currently hovered. Content: string-- The content of the hovered object. IsHovered: boolean-- Whether the object is hovered or not. }   ","version":null,"tagName":"h3"},{"title":"InterfaceTweens​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#InterfaceTweens","content":"&lt;/&gt; interface InterfaceTweens { Open: Tween -- Tween for opening the interface. Close: Tween -- Tween for closing the interface. }   ","version":null,"tagName":"h3"},{"title":"Location​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Location","content":"&lt;/&gt; interface Location { Place: string-- The current place. Data: table-- The data of the current place. Frame: GuiObject -- The frame of the current place. Back: table | (Location: Location) → ()-- The back function. Previous: table-- The previous location. Page: number-- The current page. MaxPages: number-- The maximum pages. }  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#properties","content":" ","version":null,"tagName":"h2"},{"title":"UI​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#UI","content":"&lt;/&gt; Interface.UI: ScreenGui    ","version":null,"tagName":"h3"},{"title":"__Hovered​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#__Hovered","content":"&lt;/&gt; Interface.__Hovered: CurrentlyHovered   ","version":null,"tagName":"h3"},{"title":"__Tweens​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#__Tweens","content":"&lt;/&gt; Interface.__Tweens: InterfaceTweens   ","version":null,"tagName":"h3"},{"title":"PlaceData​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#PlaceData","content":"&lt;/&gt; Interface.PlaceData: table   ","version":null,"tagName":"h3"},{"title":"Popup​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Popup","content":"&lt;/&gt; Interface.Popup: Popup   ","version":null,"tagName":"h3"},{"title":"Listeners​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Listeners","content":"&lt;/&gt; Interface.Listeners: table   ","version":null,"tagName":"h3"},{"title":"Hovers​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Hovers","content":"&lt;/&gt; Interface.Hovers: table   ","version":null,"tagName":"h3"},{"title":"Location​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Location","content":"&lt;/&gt; Interface.Location: Location  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#functions","content":" ","version":null,"tagName":"h2"},{"title":"Load​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Load","content":"&lt;/&gt; Interface:Load() → nil Loads the interface.  ","version":null,"tagName":"h3"},{"title":"Open​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Open","content":"&lt;/&gt; Interface:Open( On: string | nil,-- The location to open the interface on. FromIcon: boolean | nil,-- Whether the interface is opened from the icon. NoSound: boolean | nil-- Whether to play the sound or not. ) → nil Opens the interface.  ","version":null,"tagName":"h3"},{"title":"Close​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Close","content":"&lt;/&gt; Interface:Close( FromIcon: boolean | nil-- Whether the interface is closed from the icon. ) → nil Closes the interface.  ","version":null,"tagName":"h3"},{"title":"SetGuiCoreEnabled​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#SetGuiCoreEnabled","content":"&lt;/&gt; Interface:SetGuiCoreEnabled( Name: string,-- The name of the CoreGui. State: boolean-- The state of the CoreGui. ) → nil Sets the state of CoreGui.  ","version":null,"tagName":"h3"},{"title":"OnLocationChange​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#OnLocationChange","content":"&lt;/&gt; Interface:OnLocationChange( Function: (Location: Location) → ()-- The function to set. ) → nil Sets the listener for location change.  ","version":null,"tagName":"h3"},{"title":"TriggerDataMethod​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#TriggerDataMethod","content":"&lt;/&gt; Interface:TriggerDataMethod( Place: string,-- The place to trigger the method. Method: string,-- The method to trigger. ...: any-- The arguments to pass. ) → unknown Triggers a method of a UI Place.  ","version":null,"tagName":"h3"},{"title":"GetData​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#GetData","content":"&lt;/&gt; Interface:GetData( Place: string | nil-- The place to get the data from. ) → table Returns data of given place.  ","version":null,"tagName":"h3"},{"title":"SetHover​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#SetHover","content":"&lt;/&gt; Interface:SetHover( Object: GuiObject ,-- The object to set the hover for. RawInfo: string | () → string-- The content of the hover. ) → nil Sets the hover for an object.  ","version":null,"tagName":"h3"},{"title":"SetHoverConfig​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#SetHoverConfig","content":"&lt;/&gt; Interface:SetHoverConfig( Object: GuiObject ,-- The object to set the hover for. Follow: (Object: GuiObject ) → UDim2 -- The function to follow the object. ) → nil Sets the hover for an object.  ","version":null,"tagName":"h3"},{"title":"ConfigBlock​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#ConfigBlock","content":"&lt;/&gt; Interface:ConfigBlock( Button: GuiObject ,-- The button to set the rank requirement for. CategoryName: string,-- The category name of the rank requirement. Key: string-- The key of the rank requirement. ) → nil Sets rank requirment to access GuiObject.  ","version":null,"tagName":"h3"},{"title":"Block​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Block","content":"&lt;/&gt; Interface:Block( Button: GuiObject ,-- The button to block. RankLike: RankLike-- The minimum rank to access button. ) → nil Blocks the button for the rank requirement.  ","version":null,"tagName":"h3"},{"title":"UnBlock​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#UnBlock","content":"&lt;/&gt; Interface:UnBlock( Button: GuiObject -- The button to unblock. ) → nil Unblocks the button.  ","version":null,"tagName":"h3"},{"title":"Refresh​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#Refresh","content":"&lt;/&gt; Interface:Refresh( Data: Location | nil-- The location to show. ) → nil Same as SetLocation, but gives more freedom for what to show.  ","version":null,"tagName":"h3"},{"title":"GetLocation​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#GetLocation","content":"&lt;/&gt; Interface:GetLocation() → string Returns the location name.  ","version":null,"tagName":"h3"},{"title":"SetLocation​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#SetLocation","content":"&lt;/&gt; Interface:SetLocation( Location: string,-- The location to set. Page: number | nil,-- The page to set. OpenOnClosed: boolean | nil-- Open interface if it is closed. ) → nil Sets the location.  ","version":null,"tagName":"h3"},{"title":"GetPage​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#GetPage","content":"&lt;/&gt; Interface:GetPage() → number Returns current page of the location.  ","version":null,"tagName":"h3"},{"title":"SetPage​","type":1,"pageTitle":"Interface","url":"/GAdminV2/api/Interface#SetPage","content":"&lt;/&gt; Interface:SetPage( Page: number-- The page to set. ) → nil Sets the page of the location. ","version":null,"tagName":"h3"},{"title":"Command","type":0,"sectionRef":"#","url":"/GAdminV2/docs/Command","content":"Command warning This page is under construction. Commands are essensial for GAdmin workflow. Example: local Command = {} Command.Name = &quot;Bring&quot; Command.Alias = {&quot;Br&quot;} Command.Description = &quot;Teleports player to you.&quot; Command.Rank = 2 Command.Fluid = true Command.Arguments = { { Name = &quot;Player&quot;, Types = {&quot;Player&quot;}, Rank = 2, Flags = {&quot;PlayerOnline&quot;}, Specifics = {}, }, } Command.Server = {} Command.Client = {} --== &lt;&lt; Server &gt;&gt; function Command.Server:Run(Caller, Arguments) local player = Arguments[1] local Position = Caller.Character:GetPivot() * CFrame.Angles(0, math.rad(180), 0) player.Character:PivotTo(Position) end return Command ","keywords":"","version":"Next"},{"title":"Addons","type":0,"sectionRef":"#","url":"/GAdminV2/docs/Addons","content":"","keywords":"","version":"Next"},{"title":"Universal addon structure​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#universal-addon-structure","content":" Every well-structured addon should follow this format:     Where:   The main addon folder name must follow this format: Addon Name@Addon Author.Must have a Config with Main module.Optional Assets folder for models and modules that your addon may require.  info The main addon folder must include the tag GAdmin Addon for your add-on to load properly.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#configuration","content":" The configuration module must follow this format for the addon to work properly:  return { Enabled = true, -- Is addon enabled? Author = &quot;@gdr1461account2&quot;, -- Addon author Version = &quot;v1.0.0&quot;, -- Addon version Name = &quot;Test Addon&quot;, -- Name of the addon. Description = &quot;GAdmin addon.&quot;, -- Description of the addon. Tag = &quot;EXAMPLE&quot;, Parameters = { -- Addon parameters Commands = &quot;@this.Assets.Commands&quot;, Ranks = &quot;@this.Assets.Ranks&quot;, UI = &quot;@this.Assets.UI&quot;, ISettings = &quot;@this.Assets.ISettings&quot;, --Settings = &quot;@this.Assets.Settings&quot;, } }   Where:   Tag is an optional key that gets added as the prefix to author field.Parameters is table of GAdmin parameters that your addon uses.Description is detailed explanation of what your addon does.  ","version":"Next","tagName":"h2"},{"title":"Config Parameters​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#config-parameters","content":" There are many parameters you can use to enhance your addon’s functionality with the API.  Here’s how it works:  Parameters = { KEY = PATH }   Where:   KEY is parameter name that you want to use.PATH is the path to the object that the specified parameter will use. You can use any of the Roblox services or @this to reference the main addon folder as the starting point in the path.  Find more details about addon parameters here.  ","version":"Next","tagName":"h2"},{"title":"Main module​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#main-module","content":" The main module lets you run code whenever the GAdmin server or client boots up.  local Main = {} Main.Server = {} Main.Client = {} function Main.Server:Start() print(&quot;Server booted up!&quot;) print(self.Assets) print(self.Shared) print(self.Server) end function Main.Client:Start() print(&quot;Client booted up!&quot;) print(self.Assets) print(self.Shared) print(self.Client) end return Main   ","version":"Next","tagName":"h2"},{"title":"Server Access:​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#server-access","content":" Assets folder of your addon.Shared folder of GAdmin (GAdminV2.MainModule.Shared)Server folder of GAdmin (GAdminV2.MainModule.Server)  ","version":"Next","tagName":"h3"},{"title":"Client Access:​","type":1,"pageTitle":"Addons","url":"/GAdminV2/docs/Addons#client-access","content":" Assets folder of your addon.Shared folder of GAdmin (GAdminV2.MainModule.Shared)Client folder of GAdmin (GAdminV2.MainModule.Client) ","version":"Next","tagName":"h3"},{"title":"Addon Parameters","type":0,"sectionRef":"#","url":"/GAdminV2/docs/AddonParameters","content":"","keywords":"","version":"Next"},{"title":"Settings​","type":1,"pageTitle":"Addon Parameters","url":"/GAdminV2/docs/AddonParameters#settings","content":" warning May conflict with other addons that use the same parameter.    Object: Configuration   Replaces the current Settings object inside GAdmin (GAdminV2.Settings) with custom ones.    ","version":"Next","tagName":"h2"},{"title":"ISettings​","type":1,"pageTitle":"Addon Parameters","url":"/GAdminV2/docs/AddonParameters#isettings","content":"   Object: ModuleScript   Adds custom settings that users can change in-game.  info Setting name must be unique from existing ones on the server.  local Settings = {} Settings.Server = {} Settings.Client = {} function Settings.Server:Load(Config) Config:Set(&quot;TestSetting&quot;, true) Config:Set(&quot;TestSlider&quot;, 0.5) Config:Set(&quot;TestText&quot;, &quot;Test&quot;) end function Settings.Client:Load(Config) Config:Set({ Name = &quot;TestSetting&quot;, Description = &quot;Test setting from the addon.&quot;, Type = &quot;Boolean&quot;, Default = true, Callback = function(Request, ...) print(Request, ...) return Request.Value end, }) Config:Set({ Name = &quot;TestSlider&quot;, Description = &quot;Test slider setting from the addon.&quot;, Type = &quot;Slider&quot;, Default = { Default = 0.5, Min = 0, Max = 1, Slide = .1, }, Callback = function(Request, ...) print(Request, ...) return Request.Value end, }) Config:Set({ Name = &quot;TestText&quot;, Description = &quot;Test text setting from the addon.&quot;, Type = &quot;Text&quot;, Default = &quot;Test&quot;, Callback = function(Request, ...) print(Request, ...) return Request.Value end, }) end return Settings   ","version":"Next","tagName":"h2"},{"title":"Commands​","type":1,"pageTitle":"Addon Parameters","url":"/GAdminV2/docs/AddonParameters#commands","content":"   Object: Folder   Loads custom commands from a specified folder.  See Command  ","version":"Next","tagName":"h2"},{"title":"Ranks​","type":1,"pageTitle":"Addon Parameters","url":"/GAdminV2/docs/AddonParameters#ranks","content":"   Object: ModuleScript   Adds custom ranks into the server with your addon locally.  return { { Name = &quot;TestRank!&quot;, -- Rank name. Rank = 2.2, -- Rank power (0-5) Color = Color3.new(0.662745, 0.705882, 1):ToHex(), -- Rank color. Players = {} -- Players that will have this rank by default. }, { Name = &quot;TestRank2&quot;, Rank = 0.2, Color = Color3.new(0.678431, 0.164706, 1):ToHex(), Players = {} }, }   ","version":"Next","tagName":"h2"},{"title":"UI​","type":1,"pageTitle":"Addon Parameters","url":"/GAdminV2/docs/AddonParameters#ui","content":"   Object: Folder   Loads your own pages into the GAdmin panel.  local UI = {} function UI:Load(player, Builder) for i, Place in ipairs(script:GetChildren()) do Builder:LoadPlace(Place, Place.Frame) end end return UI   Structure:    Where:  Place is the page handler containing the page itself.Frame is the page instance.  Place module:  --== &lt;&lt; Services &gt;&gt; local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local Main = ReplicatedStorage.GAdminShared --== local Place = {} Place.Name = &quot;PLACENAME&quot; Place.Previous = function(Location) return Location.Previous end Place.Page = 0 Place.MaxPages = 0 Place.Arguments = { } function Place:Load(UI, Frame, Interface) end function Place:Set(UI, Frame, Page, Arguments, Interface) end function Place:Reload(Page, Interface) end return Place   Where:  UI is ScreenGui of admin panel.Frame is frame of your place.Interface is GAdmin Interface.Page is page frame of your place that user is currently on.Arguments is arguments that gets passed on in Interface:Refresh(). ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}